{"map":"{\"version\":3,\"sources\":[\"C:/Users/user/Documents/SPTV22/tomatojami/react_1/src/components/app-header/index.js\",\"C:/Users/user/Documents/SPTV22/tomatojami/react_1/src/components/app-header/app-header.js\",\"C:/Users/user/Documents/SPTV22/tomatojami/react_1/src/components/search-panel/index.js\",\"C:/Users/user/Documents/SPTV22/tomatojami/react_1/src/components/search-panel/search-panel.js\",\"C:/Users/user/Documents/SPTV22/tomatojami/react_1/src/components/post-status-filter/index.js\",\"C:/Users/user/Documents/SPTV22/tomatojami/react_1/src/components/post-status-filter/post-status-filter.js\",\"C:/Users/user/Documents/SPTV22/tomatojami/react_1/src/components/post-list-item/index.js\",\"C:/Users/user/Documents/SPTV22/tomatojami/react_1/src/components/post-list-item/post-list-item.js\",\"C:/Users/user/Documents/SPTV22/tomatojami/react_1/src/components/post-list/index.js\",\"C:/Users/user/Documents/SPTV22/tomatojami/react_1/src/components/post-list/post-list.js\",\"C:/Users/user/Documents/SPTV22/tomatojami/react_1/src/components/post-add-form/index.js\",\"C:/Users/user/Documents/SPTV22/tomatojami/react_1/src/components/post-add-form/post-add-form.js\",\"C:/Users/user/Documents/SPTV22/tomatojami/react_1/src/components/app/index.js\",\"C:/Users/user/Documents/SPTV22/tomatojami/react_1/src/components/app/app.js\",\"C:/Users/user/Documents/SPTV22/tomatojami/react_1/src/index.js\"],\"names\":[\"AppHeader\",\"_ref\",\"liked\",\"allPosts\",\"React\",\"createElement\",\"className\",\"SearchPanel\",\"_Component\",\"props\",\"_this\",\"_classCallCheck\",\"this\",\"_possibleConstructorReturn\",\"_getPrototypeOf\",\"call\",\"state\",\"term\",\"onUpdateSearch\",\"bind\",\"_assertThisInitialized\",\"_inherits\",\"_createClass\",\"key\",\"value\",\"e\",\"target\",\"setState\",\"type\",\"placeholder\",\"onChange\",\"Component\",\"PostStatusFilter\",\"buttons\",\"name\",\"label\",\"_this2\",\"map\",\"_this2$props\",\"filter\",\"onFilterSelect\",\"clazz\",\"concat\",\"onClick\",\"PostListItem\",\"apply\",\"arguments\",\"_this$props\",\"onDelete\",\"onToggleImportant\",\"onToggleLiked\",\"like\",\"check\",\"onToggleCheck\",\"classNames\",\"important\",\"PostList\",\"posts\",\"elements\",\"item\",\"id\",\"itemProps\",\"_objectWithoutProperties\",\"Object\",\"assign\",\"PostAddForm\",\"text\",\"onValueChange\",\"onSubmit\",\"preventDefault\",\"onAdd\",\"App\",\"data\",\"deleteItem\",\"addItem\",\"maxId\",\"index\",\"findIndex\",\"elem\",\"_toConsumableArray\",\"slice\",\"body\",\"newItem\",\"_ref2\",\"_ref3\",\"old\",\"_objectSpread\",\"_ref4\",\"_ref5\",\"items\",\"length\",\"indexOf\",\"_this$state\",\"visiblePosts\",\"filterPost\",\"searchPost\",\"ReactDOM\",\"render\",\"document\",\"getElementById\"],\"mappings\":\"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\",\"sourcesContent\":[\"import AppHeader from './app-header'\\r\\nexport default AppHeader;\",\"import React from 'react';\\r\\n\\r\\nimport './app-header.css'\\r\\n\\r\\n// Компонент AppHeader отображает заголовок приложения и информацию о количестве постов и лайков\\r\\nconst AppHeader = ({liked, allPosts}) => {\\r\\n    return (\\r\\n        <div className='app-header d-flex'>\\r\\n            <h1>\\r\\n                Sisesta oma nimi siia\\r\\n            </h1>\\r\\n            <h2>{allPosts} plaadid, meeldisid {liked}</h2>\\r\\n        </div>\\r\\n    )\\r\\n}\\r\\n\\r\\nexport default AppHeader;\\r\\n\",\"import SearchPanel from './search-panel';\\r\\nexport default SearchPanel;\",\"import React, {Component} from \\\"react\\\";\\r\\n\\r\\nimport './search-panel.css';\\r\\n\\r\\n// Компонент SearchPanel для поиска по записям\\r\\nexport default class SearchPanel extends Component {\\r\\n    constructor(props) {\\r\\n        super(props);\\r\\n        this.state = {\\r\\n            term: '' // Хранит текущий поисковый термин\\r\\n        }\\r\\n        this.onUpdateSearch = this.onUpdateSearch.bind(this); // Привязываем контекст метода\\r\\n    }\\r\\n\\r\\n    // Обновляет поисковый термин и передает его родительскому компоненту\\r\\n    onUpdateSearch(e) {\\r\\n        const term = e.target.value; // Получаем значение из поля ввода\\r\\n        this.setState({term}); // Обновляем состояние\\r\\n        this.props.onUpdateSearch(term); // Вызываем функцию родительского компонента\\r\\n    }\\r\\n\\r\\n    render() {\\r\\n        return (\\r\\n            <input\\r\\n                className='form-control search-input'\\r\\n                type='text'\\r\\n                placeholder='Otsi kirjete järgi' // Текст подсказки\\r\\n                value={this.state.term} // Привязываем значение к состоянию\\r\\n                onChange={this.onUpdateSearch} // Обработчик изменения\\r\\n            />\\r\\n        )\\r\\n    }\\r\\n}\\r\\n\",\"import PostStatusFilter from './post-status-filter';\\r\\nexport default PostStatusFilter;\",\"import React, {Component} from 'react';\\r\\n\\r\\nimport './post-status-filter.css';\\r\\n\\r\\n// Компонент PostStatusFilter отображает кнопки фильтрации постов\\r\\nexport default class PostStatusFilter extends Component {\\r\\n    constructor(props) {\\r\\n        super(props);\\r\\n        // Определяем кнопки фильтрации\\r\\n        this.buttons = [\\r\\n            {name: 'all', label: 'Kõik'}, // Кнопка для отображения всех постов\\r\\n            {name: 'like', label: 'Meeldis'} // Кнопка для отображения только лайкнутых постов\\r\\n        ];\\r\\n    }\\r\\n\\r\\n    render() {\\r\\n        // Создаем кнопки на основе массива buttons\\r\\n        const buttons = this.buttons.map(({name, label}) => {\\r\\n            const {filter, onFilterSelect} = this.props;\\r\\n            const active = filter === name; // Проверяем, является ли кнопка активной\\r\\n            const clazz = active ? 'btn-info' : 'btn-outline-secondary'; // Определяем класс для кнопки\\r\\n\\r\\n            return (\\r\\n                <button type='button'\\r\\n                    className={`btn ${clazz}`} // Применяем соответствующий класс\\r\\n                    key={name}\\r\\n                    onClick={() => onFilterSelect(name)}>\\r\\n                    {label}\\r\\n                </button>\\r\\n            )\\r\\n        });\\r\\n\\r\\n        return (\\r\\n            <div className='btn-group'>\\r\\n                {buttons} {/* Отображаем кнопки фильтрации */}\\r\\n            </div>\\r\\n        )\\r\\n    }\\r\\n}\\r\\n\",\"import PostListItem from './post-list-item';\\r\\nexport default PostListItem;\",\"import React, { Component } from 'react';\\r\\n\\r\\nimport './post-list-item.css';\\r\\n\\r\\n// Компонент PostListItem отображает отдельный элемент списка постов\\r\\nexport default class PostListItem extends Component {\\r\\n\\r\\n    render() {\\r\\n        // Деструктурируем пропсы\\r\\n        const { label, onDelete, onToggleImportant, onToggleLiked, like, check, onToggleCheck, important } = this.props;\\r\\n        let classNames = 'app-list-item d-flex justify-content-between';\\r\\n\\r\\n        // Добавляем классы в зависимости от состояния поста\\r\\n        if (important) {\\r\\n            classNames += ' important';\\r\\n        }\\r\\n\\r\\n        if (check) {\\r\\n            classNames += ' check';\\r\\n        }\\r\\n\\r\\n        if (like) {\\r\\n            classNames += ' like';\\r\\n        }\\r\\n\\r\\n        return (\\r\\n            <div className={classNames}>\\r\\n                <span\\r\\n                    className='app-list-item-label'\\r\\n                    onClick={onToggleLiked} // Обработчик клика для лайка\\r\\n                >\\r\\n                    {label}\\r\\n                </span>\\r\\n                <div className='d-flex justify-content-center align-items-center'>\\r\\n                    <button\\r\\n                        type='button'\\r\\n                        className='btn-star btn-sm'\\r\\n                        onClick={onToggleImportant} // Обработчик переключения важности\\r\\n                    >\\r\\n                        <i className='fa fa-star'></i>\\r\\n                    </button>\\r\\n                    <button\\r\\n                        type='button'\\r\\n                        className='btn-trash btn-sm'\\r\\n                        onClick={onDelete} // Обработчик удаления поста\\r\\n                    >\\r\\n                        <i className='fa fa-trash-o'></i>\\r\\n                    </button>\\r\\n                    <button\\r\\n                        type='button'\\r\\n                        className='btn-check btn-sm'\\r\\n                        onClick={onToggleCheck} // Обработчик переключения статуса \\\"проверено\\\"\\r\\n                    >\\r\\n                        <i className=\\\"fa fa-check\\\"></i>\\r\\n                    </button>\\r\\n                    <i className='fa fa-heart'></i>\\r\\n                </div>\\r\\n            </div>\\r\\n        )\\r\\n    }\\r\\n}\\r\\n\",\"import PostList from './post-list';\\r\\nexport default PostList;\",\"import React from 'react';\\r\\n\\r\\nimport PostListItem from '../post-list-item';\\r\\nimport './post-list.css';\\r\\n\\r\\n// Компонент PostList отображает список постов\\r\\nconst PostList = ({posts, onDelete, onToggleImportant, onToggleCheck, onToggleLiked}) => {\\r\\n\\r\\n    // Создает элементы списка постов, передавая необходимые пропсы каждому PostListItem\\r\\n    const elements = posts.map((item) => {\\r\\n        const {id, ...itemProps} = item; // Деструктурируем id и остальные свойства поста\\r\\n        return (\\r\\n            <li key={id} className='list-group-item'>\\r\\n                <PostListItem\\r\\n                    {...itemProps}\\r\\n                    onDelete={() => onDelete(id)} // Обработчик удаления поста\\r\\n                    onToggleImportant={() => onToggleImportant(id)} // Обработчик переключения важности\\r\\n                    onToggleCheck={() => onToggleCheck(id)} // Обработчик переключения статуса \\\"проверено\\\"\\r\\n                    onToggleLiked={() => onToggleLiked(id)} // Обработчик переключения лайка\\r\\n                />\\r\\n            </li>\\r\\n        )\\r\\n    });\\r\\n\\r\\n    return (\\r\\n        <ul className='app-list list-group'>\\r\\n            {elements} {/* Отображает элементы списка постов */}\\r\\n        </ul>\\r\\n    )\\r\\n}\\r\\n\\r\\nexport default PostList;\\r\\n\",\"import PostAddForm from './post-add-form';\\r\\nexport default PostAddForm;\",\"import React, {Component} from 'react';\\r\\n\\r\\nimport './post-add-form.css';\\r\\n\\r\\nexport default class PostAddForm extends Component {\\r\\n    constructor(props) {\\r\\n        super(props);\\r\\n        this.state = {\\r\\n            text: '' // Хранит текст нового поста\\r\\n        };\\r\\n        this.onValueChange = this.onValueChange.bind(this);\\r\\n        this.onSubmit = this.onSubmit.bind(this);\\r\\n    }\\r\\n\\r\\n    // Обрабатывает изменение значения в текстовом поле\\r\\n    onValueChange(e) {\\r\\n        this.setState({\\r\\n            text: e.target.value // Обновляет состояние текстового поля\\r\\n        });\\r\\n    }\\r\\n\\r\\n    // Обрабатывает отправку формы\\r\\n    onSubmit(e) {\\r\\n        e.preventDefault(); // Предотвращает перезагрузку страницы\\r\\n        this.props.onAdd(this.state.text); // Передает текст нового поста в родительский компонент\\r\\n        this.setState({\\r\\n            text: '' // Очищает текстовое поле после отправки\\r\\n        });\\r\\n    }\\r\\n\\r\\n    render() {\\r\\n        return (\\r\\n            <form\\r\\n                className='bottom-panel d-flex'\\r\\n                onSubmit={this.onSubmit}>\\r\\n                <input\\r\\n                    type='text'\\r\\n                    placeholder='Millest sa praegu mõtled?'\\r\\n                    className='form-control new-post-label'\\r\\n                    onChange={this.onValueChange}\\r\\n                    value={this.state.text}\\r\\n                />\\r\\n                <button\\r\\n                    type='submit'\\r\\n                    className='btn btn-outline-secondary'>\\r\\n                    Lisa\\r\\n                </button>\\r\\n            </form>\\r\\n        )\\r\\n    }\\r\\n}\\r\\n\",\"import App from './app'\\r\\nexport default App;\",\"import React, {Component} from 'react';\\r\\n\\r\\nimport AppHeader from '../app-header';\\r\\nimport SearchPanel from '../search-panel';\\r\\nimport PostStatusFilter from '../post-status-filter';\\r\\nimport PostList from '../post-list';\\r\\nimport PostAddForm from '../post-add-form';\\r\\n\\r\\nimport './app.css';\\r\\n\\r\\nexport default class App extends Component {\\r\\n    constructor(props) {\\r\\n        super(props);\\r\\n        this.state = {\\r\\n            data: [\\r\\n                {label: 'Going to learn React', important: true, like: false, check: true, id: 1},\\r\\n                {label: 'That is so good', important: false, like: false, check: false, id: 2},\\r\\n                {label: 'I need a break...', important: false, like: false, check: false, id: 3}\\r\\n            ],\\r\\n            term: '',\\r\\n            filter: 'all'\\r\\n        };\\r\\n        this.deleteItem = this.deleteItem.bind(this);\\r\\n        this.addItem = this.addItem.bind(this);\\r\\n        this.onToggleImportant = this.onToggleImportant.bind(this);\\r\\n        this.onToggleCheck = this.onToggleCheck.bind(this);\\r\\n        this.onToggleLiked = this.onToggleLiked.bind(this);\\r\\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\\r\\n        this.onFilterSelect = this.onFilterSelect.bind(this);\\r\\n        this.maxId = 4;\\r\\n    }\\r\\n\\r\\n    // Удаляет элемент из списка по указанному id\\r\\n    deleteItem(id) {\\r\\n        this.setState(({data}) => {\\r\\n            const index = data.findIndex(elem => elem.id === id);\\r\\n\\r\\n            const newArr = [...data.slice(0, index), ...data.slice(index + 1)];\\r\\n\\r\\n            return {\\r\\n                data: newArr\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    // Добавляет новый элемент в список с указанным текстом\\r\\n    addItem(body) {\\r\\n        const newItem = {\\r\\n            label: body,\\r\\n            important: false,\\r\\n            id: this.maxId++\\r\\n        }\\r\\n        this.setState(({data}) => {\\r\\n            const newArr = [...data, newItem];\\r\\n            return {\\r\\n                data: newArr\\r\\n            }\\r\\n        })\\r\\n    }\\r\\n\\r\\n    // Переключает статус важности элемента по указанному id\\r\\n    onToggleImportant(id) {\\r\\n        this.setState(({data}) => {\\r\\n            const index = data.findIndex(elem => elem.id === id);\\r\\n\\r\\n            const old = data[index];\\r\\n            const newItem = {...old, important: !old.important};\\r\\n\\r\\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\\r\\n            return {\\r\\n                data: newArr\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    // Переключает статус \\\"проверено\\\" элемента по указанному id\\r\\n    onToggleCheck(id) {\\r\\n        this.setState(({data}) => {\\r\\n            const index = data.findIndex(elem => elem.id === id);\\r\\n\\r\\n            const old = data[index];\\r\\n            const newItem = {...old, check: !old.check};\\r\\n\\r\\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\\r\\n            return {\\r\\n                data: newArr\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    // Переключает статус \\\"лайка\\\" элемента по указанному id\\r\\n    onToggleLiked(id) {\\r\\n        this.setState(({data}) => {\\r\\n            const index = data.findIndex(elem => elem.id === id);\\r\\n\\r\\n            const old = data[index];\\r\\n            const newItem = {...old, like: !old.like};\\r\\n\\r\\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)]\\r\\n            return {\\r\\n                data: newArr\\r\\n            }\\r\\n        });\\r\\n    }\\r\\n\\r\\n    // Фильтрует элементы по поисковому терму\\r\\n    searchPost(items, term) {\\r\\n        if (term.length === 0) {\\r\\n            return items;\\r\\n        }\\r\\n\\r\\n        return items.filter((item) => {\\r\\n            return item.label.indexOf(term) > -1;\\r\\n        });\\r\\n    }\\r\\n\\r\\n    // Фильтрует элементы по выбранному фильтру (например, по лайкам)\\r\\n    filterPost(items, filter) {\\r\\n        if (filter === 'like') {\\r\\n            return items.filter(item => item.like);\\r\\n        } else {\\r\\n            return items;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // Обновляет терм поиска в состоянии\\r\\n    onUpdateSearch(term) {\\r\\n        this.setState({term});\\r\\n    }\\r\\n\\r\\n    // Устанавливает выбранный фильтр в состоянии\\r\\n    onFilterSelect(filter) {\\r\\n        this.setState({filter});\\r\\n    }\\r\\n\\r\\n    render() {\\r\\n        const {data, term, filter} = this.state;\\r\\n\\r\\n        const liked = data.filter((item) => item.like).length;\\r\\n        const allPosts = data.length;\\r\\n        const visiblePosts = this.filterPost(this.searchPost(data, term), filter);\\r\\n        return (\\r\\n            <div className='app'>\\r\\n                <AppHeader liked={liked} allPosts={allPosts}/>\\r\\n                <div className='search-panel d-flex'>\\r\\n                    <SearchPanel\\r\\n                        onUpdateSearch={this.onUpdateSearch}/>\\r\\n                    <PostStatusFilter\\r\\n                        filter={filter}\\r\\n                        onFilterSelect={this.onFilterSelect}/>\\r\\n                </div>\\r\\n                <PostList\\r\\n                    posts={visiblePosts}\\r\\n                    onDelete={this.deleteItem}\\r\\n                    onToggleImportant={this.onToggleImportant}\\r\\n                    onToggleLiked={this.onToggleLiked}\\r\\n                    onToggleCheck={this.onToggleCheck}/>\\r\\n                <PostAddForm\\r\\n                    onAdd={this.addItem}/>\\r\\n            </div>\\r\\n        );\\r\\n    }\\r\\n}\\r\\n\",\"import React from 'react';\\r\\nimport ReactDOM from 'react-dom';\\r\\nimport 'bootstrap/dist/css/bootstrap.css';\\r\\nimport './index.css';\\r\\nimport App from './components/app/';\\r\\n\\r\\n// Рендерим компонент App в элемент с id 'root'\\r\\nReactDOM.render(<App />, document.getElementById('root'));\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,,,,,,,,,,function(e,t,n){e.exports=n(35)},,,,,,,function(e,t,n){},,function(e,t,n){},,function(e,t,n){},,function(e,t,n){},,function(e,t,n){},,function(e,t,n){},,function(e,t,n){},,function(e,t,n){},,function(e,t,n){\"use strict\";n.r(t);var a=n(0),c=n.n(a),i=n(10),l=n.n(i),o=(n(17),n(19),n(8)),r=n(7),s=n(2),u=n(3),m=n(5),b=n(4),d=n(6),h=n(1),f=(n(21),function(e){var t=e.liked,n=e.allPosts;return c.a.createElement(\"div\",{className:\"app-header d-flex\"},c.a.createElement(\"h1\",null,\"Sisesta oma nimi siia\"),c.a.createElement(\"h2\",null,n,\" plaadid, meeldisid \",t))}),p=(n(23),function(e){function t(e){var n;return Object(s.a)(this,t),(n=Object(m.a)(this,Object(b.a)(t).call(this,e))).state={term:\"\"},n.onUpdateSearch=n.onUpdateSearch.bind(Object(h.a)(Object(h.a)(n))),n}return Object(d.a)(t,e),Object(u.a)(t,[{key:\"onUpdateSearch\",value:function(e){var t=e.target.value;this.setState({term:t}),this.props.onUpdateSearch(t)}},{key:\"render\",value:function(){return c.a.createElement(\"input\",{className:\"form-control search-input\",type:\"text\",placeholder:\"Otsi kirjete j\\xe4rgi\",value:this.state.term,onChange:this.onUpdateSearch})}}]),t}(a.Component)),g=(n(25),function(e){function t(e){var n;return Object(s.a)(this,t),(n=Object(m.a)(this,Object(b.a)(t).call(this,e))).buttons=[{name:\"all\",label:\"K\\xf5ik\"},{name:\"like\",label:\"Meeldis\"}],n}return Object(d.a)(t,e),Object(u.a)(t,[{key:\"render\",value:function(){var e=this,t=this.buttons.map(function(t){var n=t.name,a=t.label,i=e.props,l=i.filter,o=i.onFilterSelect,r=l===n?\"btn-info\":\"btn-outline-secondary\";return c.a.createElement(\"button\",{type:\"button\",className:\"btn \".concat(r),key:n,onClick:function(){return o(n)}},a)});return c.a.createElement(\"div\",{className:\"btn-group\"},t,\" \")}}]),t}(a.Component)),k=n(11),j=(n(27),function(e){function t(){return Object(s.a)(this,t),Object(m.a)(this,Object(b.a)(t).apply(this,arguments))}return Object(d.a)(t,e),Object(u.a)(t,[{key:\"render\",value:function(){var e=this.props,t=e.label,n=e.onDelete,a=e.onToggleImportant,i=e.onToggleLiked,l=e.like,o=e.check,r=e.onToggleCheck,s=\"app-list-item d-flex justify-content-between\";return e.important&&(s+=\" important\"),o&&(s+=\" check\"),l&&(s+=\" like\"),c.a.createElement(\"div\",{className:s},c.a.createElement(\"span\",{className:\"app-list-item-label\",onClick:i},t),c.a.createElement(\"div\",{className:\"d-flex justify-content-center align-items-center\"},c.a.createElement(\"button\",{type:\"button\",className:\"btn-star btn-sm\",onClick:a},c.a.createElement(\"i\",{className:\"fa fa-star\"})),c.a.createElement(\"button\",{type:\"button\",className:\"btn-trash btn-sm\",onClick:n},c.a.createElement(\"i\",{className:\"fa fa-trash-o\"})),c.a.createElement(\"button\",{type:\"button\",className:\"btn-check btn-sm\",onClick:r},c.a.createElement(\"i\",{className:\"fa fa-check\"})),c.a.createElement(\"i\",{className:\"fa fa-heart\"})))}}]),t}(a.Component)),O=(n(29),function(e){var t=e.posts,n=e.onDelete,a=e.onToggleImportant,i=e.onToggleCheck,l=e.onToggleLiked,o=t.map(function(e){var t=e.id,o=Object(k.a)(e,[\"id\"]);return c.a.createElement(\"li\",{key:t,className:\"list-group-item\"},c.a.createElement(j,Object.assign({},o,{onDelete:function(){return n(t)},onToggleImportant:function(){return a(t)},onToggleCheck:function(){return i(t)},onToggleLiked:function(){return l(t)}})))});return c.a.createElement(\"ul\",{className:\"app-list list-group\"},o,\" \")}),v=(n(31),function(e){function t(e){var n;return Object(s.a)(this,t),(n=Object(m.a)(this,Object(b.a)(t).call(this,e))).state={text:\"\"},n.onValueChange=n.onValueChange.bind(Object(h.a)(Object(h.a)(n))),n.onSubmit=n.onSubmit.bind(Object(h.a)(Object(h.a)(n))),n}return Object(d.a)(t,e),Object(u.a)(t,[{key:\"onValueChange\",value:function(e){this.setState({text:e.target.value})}},{key:\"onSubmit\",value:function(e){e.preventDefault(),this.props.onAdd(this.state.text),this.setState({text:\"\"})}},{key:\"render\",value:function(){return c.a.createElement(\"form\",{className:\"bottom-panel d-flex\",onSubmit:this.onSubmit},c.a.createElement(\"input\",{type:\"text\",placeholder:\"Millest sa praegu m\\xf5tled?\",className:\"form-control new-post-label\",onChange:this.onValueChange,value:this.state.text}),c.a.createElement(\"button\",{type:\"submit\",className:\"btn btn-outline-secondary\"},\"Lisa\"))}}]),t}(a.Component)),y=(n(33),function(e){function t(e){var n;return Object(s.a)(this,t),(n=Object(m.a)(this,Object(b.a)(t).call(this,e))).state={data:[{label:\"Going to learn React\",important:!0,like:!1,check:!0,id:1},{label:\"That is so good\",important:!1,like:!1,check:!1,id:2},{label:\"I need a break...\",important:!1,like:!1,check:!1,id:3}],term:\"\",filter:\"all\"},n.deleteItem=n.deleteItem.bind(Object(h.a)(Object(h.a)(n))),n.addItem=n.addItem.bind(Object(h.a)(Object(h.a)(n))),n.onToggleImportant=n.onToggleImportant.bind(Object(h.a)(Object(h.a)(n))),n.onToggleCheck=n.onToggleCheck.bind(Object(h.a)(Object(h.a)(n))),n.onToggleLiked=n.onToggleLiked.bind(Object(h.a)(Object(h.a)(n))),n.onUpdateSearch=n.onUpdateSearch.bind(Object(h.a)(Object(h.a)(n))),n.onFilterSelect=n.onFilterSelect.bind(Object(h.a)(Object(h.a)(n))),n.maxId=4,n}return Object(d.a)(t,e),Object(u.a)(t,[{key:\"deleteItem\",value:function(e){this.setState(function(t){var n=t.data,a=n.findIndex(function(t){return t.id===e});return{data:[].concat(Object(r.a)(n.slice(0,a)),Object(r.a)(n.slice(a+1)))}})}},{key:\"addItem\",value:function(e){var t={label:e,important:!1,id:this.maxId++};this.setState(function(e){var n=e.data;return{data:[].concat(Object(r.a)(n),[t])}})}},{key:\"onToggleImportant\",value:function(e){this.setState(function(t){var n=t.data,a=n.findIndex(function(t){return t.id===e}),c=n[a],i=Object(o.a)({},c,{important:!c.important});return{data:[].concat(Object(r.a)(n.slice(0,a)),[i],Object(r.a)(n.slice(a+1)))}})}},{key:\"onToggleCheck\",value:function(e){this.setState(function(t){var n=t.data,a=n.findIndex(function(t){return t.id===e}),c=n[a],i=Object(o.a)({},c,{check:!c.check});return{data:[].concat(Object(r.a)(n.slice(0,a)),[i],Object(r.a)(n.slice(a+1)))}})}},{key:\"onToggleLiked\",value:function(e){this.setState(function(t){var n=t.data,a=n.findIndex(function(t){return t.id===e}),c=n[a],i=Object(o.a)({},c,{like:!c.like});return{data:[].concat(Object(r.a)(n.slice(0,a)),[i],Object(r.a)(n.slice(a+1)))}})}},{key:\"searchPost\",value:function(e,t){return 0===t.length?e:e.filter(function(e){return e.label.indexOf(t)>-1})}},{key:\"filterPost\",value:function(e,t){return\"like\"===t?e.filter(function(e){return e.like}):e}},{key:\"onUpdateSearch\",value:function(e){this.setState({term:e})}},{key:\"onFilterSelect\",value:function(e){this.setState({filter:e})}},{key:\"render\",value:function(){var e=this.state,t=e.data,n=e.term,a=e.filter,i=t.filter(function(e){return e.like}).length,l=t.length,o=this.filterPost(this.searchPost(t,n),a);return c.a.createElement(\"div\",{className:\"app\"},c.a.createElement(f,{liked:i,allPosts:l}),c.a.createElement(\"div\",{className:\"search-panel d-flex\"},c.a.createElement(p,{onUpdateSearch:this.onUpdateSearch}),c.a.createElement(g,{filter:a,onFilterSelect:this.onFilterSelect})),c.a.createElement(O,{posts:o,onDelete:this.deleteItem,onToggleImportant:this.onToggleImportant,onToggleLiked:this.onToggleLiked,onToggleCheck:this.onToggleCheck}),c.a.createElement(v,{onAdd:this.addItem}))}}]),t}(a.Component));l.a.render(c.a.createElement(y,null),document.getElementById(\"root\"))}],[[12,2,1]]]);","extractedComments":[]}